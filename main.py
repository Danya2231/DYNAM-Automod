import discord
from discord import app_commands
from discord.ext import commands
import json, os, asyncio
from datetime import datetime
from filters import banned_words, caps_limit
from utils import log_action, warn_user, get_warns, clear_warns, apply_punishment

# ==========================
#         –ù–ê–°–¢–†–û–ô–ö–ò
# ==========================
GUILD_ID = 1427588125126819913
LOG_CHANNEL_ID = 1427600162615726111
ROLE_UNVERIFIED = 1427612004352393336
ROLE_VERIFIED = 1427612455575617636
ROLE_MUTED = 1427654016728568050
MOD_ROLES = [
    1427595363736490024,
    1427595483316092979,
    1427595591189397544,
    1427595715428880436
]

# ==========================
#         –¢–û–ö–ï–ù
# ==========================
import os
TOKEN = os.getenv("TOKEN")

# ==========================
#         –ò–ù–¢–ï–ù–¢–´
# ==========================
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ==========================
#         –ü–ê–ü–ö–ê DATA
# ==========================
if not os.path.exists("data"):
    os.makedirs("data")

WARN_FILE = "data/warns.json"
if not os.path.exists(WARN_FILE):
    with open(WARN_FILE, "w") as f:
        json.dump({}, f)

# ==========================
#         –ö–≠–®
# ==========================
user_message_cache = {}


# ==========================
#         –û–ù–õ–ê–ô–ù –ò –°–¢–ê–¢–£–°
# ==========================
@bot.event
async def on_ready():
    await bot.tree.sync(guild=discord.Object(id=GUILD_ID))
    print(f"‚úÖ {bot.user} –ø–æ–¥–∫–ª—é—á—ë–Ω!")

    # --- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activity = discord.Game(name="Advanced Moderation", type=discord.ActivityType.playing)
    await bot.change_presence(status=discord.Status.idle, activity=activity)

    await log_action(bot, LOG_CHANNEL_ID, "üü¢ **DYNAM Automod –∞–∫—Ç–∏–≤–µ–Ω!**")


# ==========================
#         –°–û–ë–´–¢–ò–ï on_message
# ==========================
@bot.event
async def on_message(message: discord.Message):
    if message.author.bot:
        return
    lowered = message.content.lower()
    author_id = str(message.author.id)
    now = asyncio.get_event_loop().time()

    # --- –∞–Ω—Ç–∏—Å–ø–∞–º
    if author_id not in user_message_cache:
        user_message_cache[author_id] = []
    user_message_cache[author_id].append(now)
    user_message_cache[author_id] = [t for t in user_message_cache[author_id] if now - t < 5]
    if len(user_message_cache[author_id]) > 6:
        await message.delete()
        await warn_user(bot, message.author, "–§–ª—É–¥ (–ø.1.2)", LOG_CHANNEL_ID)
        return

    # --- –∞–Ω—Ç–∏–∫–∞–ø—Å
    if sum(1 for c in message.content if c.isupper()) > caps_limit and len(message.content) > 10:
        await message.delete()
        await warn_user(bot, message.author, "–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ CAPS LOCK (–ø.1.2)", LOG_CHANNEL_ID)
        return

    # --- —Ñ–∏–ª—å—Ç—Ä —Å–ª–æ–≤
    if any(word in lowered for word in banned_words):
        await message.delete()
        await warn_user(bot, message.author, "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è/–º–∞—Ç (–ø.1.2)", LOG_CHANNEL_ID)
        return

    # --- —Å—Å—ã–ª–∫–∏, —Ä–µ–∫–ª–∞–º–∞, –∑–∞–ª–≥–æ, —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
    urls = ["http://", "https://", "www.", "discord.gg", "t.me", "vk.com", "boosty", "promo"]
    if any(url in lowered for url in urls) or len(message.mentions) >= 1:
        await message.delete()
        mod_ping = " ".join([f"<@&{r}>" for r in MOD_ROLES])
        embed = discord.Embed(description=f"{message.author.mention} –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–æ 4.1/4.2\n"
                                          f"–ü—Ä–æ—Å—å–±–∞ –≤—ã–¥–∞—Ç—å –µ–º—É –Ω–∞–∫–∞–∑–∞–Ω–∏–µ!\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {message.content}\n{mod_ping}",
                              color=0xFF0000)
        log_channel = bot.get_channel(LOG_CHANNEL_ID)
        if log_channel:
            await log_channel.send(embed=embed)
        return

    await bot.process_commands(message)


# ==========================
#         SLASH-–ö–û–ú–ê–ù–î–´
# ==========================
# --- /warn
@bot.tree.command(
    name="warn",
    description="–í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", reason="–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
async def warn(interaction: discord.Interaction, user: discord.Member, reason: str):
    if not interaction.user.guild_permissions.moderate_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    await warn_user(bot, user, reason, LOG_CHANNEL_ID)
    await interaction.response.send_message(f"‚ö†Ô∏è {user.mention} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}", ephemeral=True)


# --- /warnlist
@bot.tree.command(
    name="warnlist",
    description="–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
async def warnlist(interaction: discord.Interaction, user: discord.Member):
    count = get_warns(user.id)
    await interaction.response.send_message(f"üìã –£ {user.mention} {count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π", ephemeral=True)


# --- /clearwarns
@bot.tree.command(
    name="clearwarns",
    description="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
async def clearwarns_cmd(interaction: discord.Interaction, user: discord.Member):
    if not interaction.user.guild_permissions.administrator:
        return await interaction.response.send_message("‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", ephemeral=True)
    clear_warns(user.id)
    await log_action(bot, LOG_CHANNEL_ID, f"üßπ {interaction.user} –æ—á–∏—Å—Ç–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è {user}")
    await interaction.response.send_message(f"‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è {user.mention} –æ—á–∏—â–µ–Ω—ã", ephemeral=True)


# --- /mute
@bot.tree.command(
    name="mute",
    description="–ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å –ø—Ä–∏—á–∏–Ω–æ–π",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", time="–í—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 30m, 2h)", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def mute(interaction: discord.Interaction, user: discord.Member, time: str, reason: str):
    if not interaction.user.guild_permissions.moderate_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    role_muted = interaction.guild.get_role(ROLE_MUTED)
    await user.add_roles(role_muted)
    await log_action(bot, LOG_CHANNEL_ID, f"üîá {user} –∑–∞–º—É—á–µ–Ω –Ω–∞ {time}. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message(f"üîá {user.mention} –∑–∞–º—É—á–µ–Ω –Ω–∞ {time}", ephemeral=True)

    # –ü–∞—Ä—Å–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏
    sec = 0
    if time.endswith("m"):
        sec = int(time[:-1]) * 60
    elif time.endswith("h"):
        sec = int(time[:-1]) * 3600
    elif time.endswith("d"):
        sec = int(time[:-1]) * 86400
    if sec > 0:
        await asyncio.sleep(sec)
        await user.remove_roles(role_muted)
        await log_action(bot, LOG_CHANNEL_ID, f"‚úÖ {user} —Ä–∞–∑–º—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ {time}")


# --- /unmute
@bot.tree.command(
    name="unmute",
    description="–°–Ω—è—Ç—å –º—É—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
async def unmute(interaction: discord.Interaction, user: discord.Member):
    if not interaction.user.guild_permissions.moderate_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    role_muted = interaction.guild.get_role(ROLE_MUTED)
    await user.remove_roles(role_muted)
    await log_action(bot, LOG_CHANNEL_ID, f"üîä {user} —Ä–∞–∑–º—É—á–µ–Ω –≤—Ä—É—á–Ω—É—é")
    await interaction.response.send_message(f"üîä {user.mention} —Ä–∞–∑–º—É—á–µ–Ω", ephemeral=True)


# --- /ban
@bot.tree.command(
    name="ban",
    description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–≤—Å–µ–≥–¥–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def ban(interaction: discord.Interaction, user: discord.Member, reason: str):
    if not interaction.user.guild_permissions.ban_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    await user.ban(reason=reason)
    await log_action(bot, LOG_CHANNEL_ID, f"‚õî {user} –∑–∞–±–∞–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message(f"‚õî {user.mention} –∑–∞–±–∞–Ω–µ–Ω", ephemeral=True)


# --- /kick
@bot.tree.command(
    name="kick",
    description="–ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def kick(interaction: discord.Interaction, user: discord.Member, reason: str):
    if not interaction.user.guild_permissions.kick_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    await user.kick(reason=reason)
    await log_action(bot, LOG_CHANNEL_ID, f"üë¢ {user} –∫–∏–∫–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message(f"üë¢ {user.mention} –∫–∏–∫–Ω—É—Ç", ephemeral=True)


# --- /softban
@bot.tree.command(
    name="softban",
    description="–ë–∞–Ω –Ω–∞ 1 –¥–µ–Ω—å —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π (softban)",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", reason="–ü—Ä–∏—á–∏–Ω–∞")
async def softban(interaction: discord.Interaction, user: discord.Member, reason: str):
    if not interaction.user.guild_permissions.ban_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    await user.ban(reason=reason)
    await user.unban(reason="Softban –∑–∞–≤–µ—Ä—à—ë–Ω")
    await log_action(bot, LOG_CHANNEL_ID, f"‚ö° {user} softban –Ω–∞ 1 –¥–µ–Ω—å. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    await interaction.response.send_message(f"‚ö° {user.mention} softban –ø—Ä–∏–º–µ–Ω—ë–Ω", ephemeral=True)


# --- /verif
@bot.tree.command(
    name="verif",
    description="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–Ω–∏–º–∞–µ—Ç —Ä–æ–ª—å –ù–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –¥–∞—ë—Ç –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π)",
    guild=discord.Object(id=GUILD_ID)
)
@app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å")
async def verif(interaction: discord.Interaction, user: discord.Member):
    if not interaction.user.guild_permissions.moderate_members:
        return await interaction.response.send_message("‚ùå –ù–µ—Ç –ø—Ä–∞–≤", ephemeral=True)
    guild = interaction.guild
    try:
        role_unverified = guild.get_role(ROLE_UNVERIFIED)
        role_verified = guild.get_role(ROLE_VERIFIED)
        if role_unverified in user.roles:
            await user.remove_roles(role_unverified)
        if role_verified not in user.roles:
            await user.add_roles(role_verified)
        await interaction.response.send_message(f"‚úÖ {user.mention} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
        await log_action(bot, LOG_CHANNEL_ID, f"‚úÖ {user} –ø—Ä–æ—à—ë–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é (–≤—ã–¥–∞–ª –º–æ–¥–µ—Ä–∞—Ç–æ—Ä {interaction.user})")
    except Exception as e:
        await interaction.response.send_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", ephemeral=True)


# ==========================
#         –ó–ê–ü–£–°–ö –ë–û–¢–ê
# ==========================
bot.run(TOKEN)

